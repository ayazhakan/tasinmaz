// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using tasinmaz_backend;

namespace tasinmaz_backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.5.21301.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("tasinmaz_backend.Models.City", b =>
                {
                    b.Property<int>("cityid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("cityname")
                        .HasColumnType("text");

                    b.HasKey("cityid");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("tasinmaz_backend.Models.County", b =>
                {
                    b.Property<int>("countyid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("cityid")
                        .HasColumnType("integer");

                    b.Property<string>("countyname")
                        .HasColumnType("text");

                    b.HasKey("countyid");

                    b.HasIndex("cityid");

                    b.ToTable("counties");
                });

            modelBuilder.Entity("tasinmaz_backend.Models.Kullanici", b =>
                {
                    b.Property<int>("kullaniciid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ad")
                        .HasColumnType("text");

                    b.Property<string>("adres")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<bool>("rol")
                        .HasColumnType("boolean");

                    b.Property<string>("sifre")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<bool?>("silindimi")
                        .HasColumnType("boolean");

                    b.Property<string>("soyad")
                        .HasColumnType("text");

                    b.HasKey("kullaniciid");

                    b.ToTable("kullanicilar");
                });

            modelBuilder.Entity("tasinmaz_backend.Models.Log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Acikklama")
                        .HasColumnType("text");

                    b.Property<string>("Ip")
                        .HasColumnType("text");

                    b.Property<string>("durum")
                        .HasColumnType("text");

                    b.Property<string>("islemtipi")
                        .HasColumnType("text");

                    b.Property<DateTime>("tarihsaat")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id");

                    b.ToTable("loglar");
                });

            modelBuilder.Entity("tasinmaz_backend.Models.Neighborhood", b =>
                {
                    b.Property<int>("neighborhoodid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("countyid")
                        .HasColumnType("integer");

                    b.Property<string>("neighborhoodname")
                        .HasColumnType("text");

                    b.HasKey("neighborhoodid");

                    b.HasIndex("countyid");

                    b.ToTable("neighborhoods");
                });

            modelBuilder.Entity("tasinmaz_backend.Models.Tasinmaz", b =>
                {
                    b.Property<int>("tasinmazid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ada")
                        .HasColumnType("integer");

                    b.Property<string>("adres")
                        .HasColumnType("text");

                    b.Property<int?>("cityid")
                        .HasColumnType("integer");

                    b.Property<string>("cityname")
                        .HasColumnType("text");

                    b.Property<int?>("countyid")
                        .HasColumnType("integer");

                    b.Property<string>("countyname")
                        .HasColumnType("text");

                    b.Property<int?>("neighborhoodid")
                        .HasColumnType("integer");

                    b.Property<string>("neighborhoodname")
                        .HasColumnType("text");

                    b.Property<string>("nitelik")
                        .HasColumnType("text");

                    b.Property<int>("parsel")
                        .HasColumnType("integer");

                    b.Property<bool?>("silindimi")
                        .HasColumnType("boolean");

                    b.HasKey("tasinmazid");

                    b.HasIndex("neighborhoodid");

                    b.ToTable("tasinmazlar");
                });

            modelBuilder.Entity("tasinmaz_backend.Models.County", b =>
                {
                    b.HasOne("tasinmaz_backend.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("cityid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("tasinmaz_backend.Models.Neighborhood", b =>
                {
                    b.HasOne("tasinmaz_backend.Models.County", "county")
                        .WithMany()
                        .HasForeignKey("countyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("county");
                });

            modelBuilder.Entity("tasinmaz_backend.Models.Tasinmaz", b =>
                {
                    b.HasOne("tasinmaz_backend.Models.Neighborhood", "neighborhood")
                        .WithMany()
                        .HasForeignKey("neighborhoodid");

                    b.Navigation("neighborhood");
                });
#pragma warning restore 612, 618
        }
    }
}
